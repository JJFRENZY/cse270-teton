name: Simple CI/CD Pipeline for CSE 270

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the latest code
        uses: actions/checkout@v4.1.2

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest requests pytest-mock selenium requests-mock coverage
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run tests
        run: |
          if compgen -G "tests/test_*.py" > /dev/null; then
            pytest
          else
            echo "No pytest tests found; continuing."
          fi

      - name: Prepare site artifact
        run: |
          set -euo pipefail
          SITE=""
          for CAND in "teton/1.6" "teton/1.5" "teton/1.4" "teton/1.3" "teton/1.2" "teton"; do
            if [ -d "$CAND" ]; then
              SITE="$CAND"
              break
            fi
          done
          if [ -z "$SITE" ]; then
            echo "No site folder found (looked for teton/{1.6..1.2} and teton)." >&2
            exit 1
          fi
          echo "Using site path: $SITE"
          mkdir -p site
          cp -a "$SITE"/. site/

      - name: Upload static site artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  analyze:
    needs: build
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: ['javascript']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.2

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  deploy:
    needs: analyze
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
