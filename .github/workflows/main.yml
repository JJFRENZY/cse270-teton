name: Simple CI/CD Pipeline for CSE 270

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the latest code
        uses: actions/checkout@v4.1.2

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest requests pytest-mock selenium requests-mock coverage
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # treat remaining as warnings
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run tests (optional)
        run: |
          if compgen -G "tests/test_*.py" > /dev/null; then
            pytest -q
          else
            echo "No pytest tests found; continuing."
          fi

      # ðŸ”Ž Recursively find the site folder (works even if your code is under 'cse270 5/' etc.)
      - name: Determine site path
        id: site
        shell: bash
        run: |
          set -euo pipefail

          # 1) Prefer teton/1.6..1.2 anywhere in the repo
          PREFERRED=( "teton/1.6" "teton/1.5" "teton/1.4" "teton/1.3" "teton/1.2" )
          FOUND=""
          for pref in "${PREFERRED[@]}"; do
            HIT="$(git ls-files "**/${pref}/index.html" "**/${pref}/index.htm" 2>/dev/null | head -n1 || true)"
            if [ -n "$HIT" ]; then
              FOUND="$(dirname "$HIT")"
              break
            fi
          done

          # 2) Otherwise pick the first folder in the repo that has an index.{html,htm}
          if [ -z "$FOUND" ]; then
            HIT="$(git ls-files "**/index.html" "**/index.htm" 2>/dev/null | head -n1 || true)"
            if [ -n "$HIT" ]; then
              FOUND="$(dirname "$HIT")"
            fi
          fi

          if [ -z "$FOUND" ]; then
            echo "No site folder found (looked for teton/1.6..1.2 or any folder containing index.html)." >&2
            exit 1
          fi

          echo "Using site path: $FOUND"
          echo "path=$FOUND" >> "$GITHUB_OUTPUT"

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload static site artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.site.outputs.path }}

  deploy:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
